Problem 11. Transactions


A transaction symbolizes a unit of work performed within a database management system (or similar system) against a database, 
and treated in a coherent and reliable way independent of other transactions. A transaction generally represents any change in database. 
Transactions in a database environment have two main purposes:

- To provide reliable units of work that allow correct recovery from failures and keep a database consistent even in cases of system failure, 
when execution stops (completely or partially) and many operations upon a database remain uncompleted, with unclear status.

- To provide isolation between programs accessing a database concurrently. If this isolation is not provided, the program's 
outcome are possibly erroneous.

ACID - A database transaction, by definition, must be atomic, consistent, isolated and durable.
Transactions provide an "all-or-nothing" proposition, stating that each work-unit performed in a database must either complete 
in its entirety or have no effect whatsoever. Further, the system must isolate each transaction from other transactions, results 
must conform to existing constraints in the database, and transactions that complete successfully must get written to durable storage.

Transaction log (also transaction journal, database log, binary log or audit trail) is a history of actions executed by a database management system 
to guarantee ACID properties over crashes or hardware failures. Physically, a log is a file listing changes to the database, 
stored in a stable storage format.